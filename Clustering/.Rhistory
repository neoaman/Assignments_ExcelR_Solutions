normalize_dummy <- function(x){
col <- ncol(x)
row <- nrow(x)
y <- 1:nrow(x)
for (i in 1:col){
if(class(x[,i])=="numeric" | class(x[,i])=="integer")
{
minx <- min(x[,i])
maxx <- max(x[,i])
for(j in 1:row)
{
x[j,i] <- ifelse((x[j,i] - minx) != 0,yes =((x[j,i] - minx) / (maxx - minx)),no = 0)
}
}
}
f <- c()
for(i in 1:ncol(x)){
if(class(x[,i])=="factor"){
dummies <- data.frame(dummies::dummy(x[,i]))
y <- data.frame(y,dummies)
f <- c(f,i)
}
else{
next
}
}
if(is.null(f)){
output <- x
}
else{output <- data.frame(x[,-f],y[,-1])}
return(output)
}
all_hclust <- function(dist,k=3,method="all"){
method=c("single", "complete", "average", "mcquitty", "ward.D", "ward.D2", "centroid","median")
row <- 0
clust_df <<- as.data.frame(method,matrix(0,nrow = length(method),ncol = k))
all_clus <- list()
for(i in method){
row <- row+1
hcl <- hclust(d = dist,method = i)
clusters <- cutree(tree = hcl,k = k)
all_clus[[i]] <- clusters
clust_df[row,2:(k+1)] <- as.integer(tabulate(clusters))
}
all_clus[["table"]] <- clust_df
return(all_clus)
}
# Normalize_dummycreation and hierarchical clustering
df_air <- normalize_dummy(df_air)
dist_A <-dist(df_air,method = "euclidian")
clustlist <- all_hclust(dist = dist_A,k = 3)
clustlist$table # From table we can see that ward.D2 is giving best result among all
#write.csv(clustlist$table,"hclust_1.csv")
df_AA <-data.frame(airline,cluster = clustlist$ward.D2)
mode <- function(x){
which.max(tabulate(x))
}
Exp_A_1 <- data.frame(aggregate(x = airline[,-c(10:12)],by = list(df_AA$cluster),FUN =mean),aggregate(x = airline[,c(10:12)],by = list(df_AA$cluster),FUN =mode)[,-1])
#write.csv(Exp_A_1,"ExpectedA1.csv")
# Check Using the sub Sample
df_s_airline <-airline[sample(1:nrow(airline),size = round(nrow(airline)*0.7),replace = F),]
df_s_air <- normalize_dummy(df_s_airline)
dist_s_A <-dist(df_s_air,method = "euclidian")
clustlist_s_a <- all_hclust(dist_s_A,k = 3)
clustlist_s_a$table
df_SA <- data.frame(df_s_airline,cluster = clustlist_s_a$ward.D2)
Exp_SA_1 <- data.frame(aggregate(x = df_s_airline[,-c(10:12)],by = list(df_SA$cluster),FUN =mean),
aggregate(x = airline[,c(10:12)],by = list(df_AA$cluster),FUN =mode)[,-1])
list(Exp_A_1,Exp_SA_1)
#write.csv(Exp_SA_1,"ExpectedAS1.csv")
# Dendogrm
cl <- hclust(d= dist_A,method = "ward.D2")
plot(cl,hang = -1,labels=airline$id,cex = 0.25)
rect.hclust(cl,k=3)
# KMeans Clustering
df_norm_A <- normalize_dummy(airline[,-1])
km_A <- kmeans(x = df_norm_A,5)
table(km_A$cluster)
Twss<-c();k <- 1:7
for(i in 1:7){
set.seed(33) # seed = 33  ; I set this seed for constant plot for every iteration so please dont remove it
km_a <- kmeans(x = df_norm_A,i)
Twss[i]<-km_a$tot.withinss
}
Twss
plot(y=Twss,x = k,"b",
col=c(rep(1,2),3,rep(1,4)),cex = c(rep(1,2),2,rep(1,4)),lwd=3,main = 'Scree Plot',
col.main="blue",col.axis="blue") # I may consider 3 as my optimum k value
text(x = 3,y = 1800,labels = "Elbow point")
# From the plot I get my elbow point for k = 3.
set.seed(33) # I set the same seed for same answer for every iteration
km_A <- kmeans(x = df_norm_A,3)
table(km_A$cluster)
aggregate(x = airline[,-c(1,3,10:12)],by = list(km_A$cluster),mean)
#write.csv(aggregate(x = df_finalA[,-c(1,3,10:12)],by = list(km_A$cluster),mean),"aggreAirKmea.csv")
head(airline)
# Question no 2 ----
crime <- read.csv("crime_data.csv")
head(crime)
df_crime <- crime[,-1]
summary(crime)
#write.csv(summary(crime),"Summary_Crime.csv")
df_s_c <- normalize_dummy(df_crime)
boxplot(df_s_c)$out
dist_C <- dist(df_s_c,method = 'euclidian')
clus_C <- all_hclust(dist = dist_C,k = 3)
clus_C$table
#write.csv(clus_C$table,"Crime_hclust.csc")
df_C <- data.frame(crime,cluster=clus_C$ward.D2)
Exp_C_1 <- data.frame(aggregate(x = df_C[,-c(1,6)],by = list(df_C$cluster),FUN =mean))
#write.csv(Exp_C_1,"Crime_Hclust2.csv")
hcl_c <- hclust(dist_C,method = "ward.D2")
plot(hcl_c,hang = -1,labels = crime$X)
rect.hclust(hcl_c,k = 3,border =c("red",'yellow','green'), )
# Test with a sample
set.seed(12)
df_s_crime <-crime[sample(1:nrow(crime),size = round(nrow(crime)*0.8),replace = F),]
df_s_c <- normalize_dummy(df_s_crime[,-1])
dist_s_c <-dist(df_s_c,method = "euclidian")
clustlist_s_c <- all_hclust(dist_s_c,k = 3)
clustlist_s_c$table
df_SC <- data.frame(df_s_crime,cluster = clustlist_s_c$ward.D2)
Exp_SC_1 <- data.frame(aggregate(x = df_SC[,-1],by = list(df_SC$cluster),FUN =mean))
list(Crimedata = Exp_C_1,SampledCrimeData=Exp_SC_1)
#write.csv(Exp_SC_1,"crime_sample_cluster.csv")
# KMeans Clustering
df_norm_C <- normalize_dummy(crime[,-1])
km_c <- kmeans(x = df_norm_C,5)
table(km_c$cluster)
wss<-c()
for(i in 1:10){
set.seed(11) # seed is 11
km_c <- kmeans(x = df_norm_C,i)
wss[i]<-km_c$tot.withinss
}
wss
plot(y=wss,x = 1:10,"b",col=c(rep(1,2),3,rep(1,7)),cex=c(rep(1,2),2,rep(1,7))) # I may consider 5 as my optimum cluster size
text(3,4,labels = "Elbow Point")
set.seed(11) # seed is 11
km_c <- kmeans(x = df_norm_C,3)
table(km_c$cluster)
km_c$cluster
aggregate(crime[,-1],by = list(km_c$cluster),FUN = mean)
#write.csv(aggregate(crime[,-1],by = list(km_c$cluster),FUN = mean),file = "crime_kclusters.csv")
plot(x = crime$Rape,y = crime$Murder,col=ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")))
attach(crime)
scatterplot3d::scatterplot3d(x =Murder ,y =Assault ,z =Rape ,
color = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),
pch = 20,type = "h",box = F,main = "Crime Cluster")
write.csv(data.frame(crime,km_c$cluster),"CrimeData")
criminal <- data.frame("location"=gsub(" ","",criminal$X),crime[,-1],km_c$cluster)
set.seed(5)
wordcloud::wordcloud(words = criminal$location,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green","red"),rot.per = 0,fixed.asp = T,random.color = F)
criminal
criminal <- data.frame("location"=gsub(" ","",criminal$X),crime[,-1],km_c$cluster)
wordcloud::wordcloud(words = criminal$location,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green","red"),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = crime$location,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green","red"),rot.per = 0,fixed.asp = T,random.color = F)
crime$location
crime
wordcloud::wordcloud(words = crime$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green","red"),rot.per = 0,fixed.asp = T,random.color = F)
A <- data.frame("aman"= 1:10,"Patel"=21:30)
A
rownames(A)
colnames(A)
colnames(A) <- c("Patel","Aman")
A
LifeCycleSavings
rownames(LifeCycleSavings)
df <- LifeCycleSavings
df <- data.frame(rownames(LifeCycleSavings),LifeCycleSavings)
df
data.frame(LifeCycleSavings)
A <- data.frame(LifeCycleSavings)
A
A[,1]
A <- data.frame(rownames(LifeCycleSavings),LifeCycleSavings)
A
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings)
A
nrows(LifeCycleSavings)
nrows(A)
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:)
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings)
rows(A)
nrow(A)
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
A
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
A
A
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings,row.names = T)
A
A <- data.frame("Location" = rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
A
crime
Criminal <- data.frame(crime,km_c$cluster)
Criminal
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green","red"),rot.per = 0,fixed.asp = T,random.color = F)
Criminal
wordcloud::wordcloud(words = Criminal$X,
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","yellow")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(2,2),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(2,2),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 200,min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
window()
windows()
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,scale = c(1,1),min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
windows()
wordcloud::wordcloud(words = Criminal$X,
max.words = 50,min.freq =  1,freq = crime$UrbanPop,random.order = T,
ordered.colors =T ,
colors = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),rot.per = 0,fixed.asp = T,random.color = F)
Criminal
head(LifeCycleSavings)
Aman <- c("pop75","pop15")
Aman
df <- data.frame(rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
df
barplot(c(df$pop15,df$pop75))
barplot(c(df$pop15,df$pop75))
barplot(y = c(df$pop15,df$pop75),x=df$rownames.LifeCycleSavings.)
df <- head(df)
df
df <- data.frame(state=rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
df <- head(df)
df
plot(x = df$state,y = df$pop15)
barplot(x = df$state,y = df$pop15)
df$state
barplot(x = df$state)
df
df <- head(df)[,c(1,3,4)]
df
library(tidyr)
tidyr::gather(data = df,col,val)
df_1 <- tidyr::gather(data = df,col,val)
df_1
df <- head(df)[,c(1,3,4)]
df
df_1 <- tidyr::gather(data = df,col,val,2:3)
df_1
library(ggplot2)
ggplot(data = df,aes(x = state,y=val))+geom_bar()
ggplot(data = df_1,aes(x = state,y=val))+geom_bar()
ggplot(data = df_1,aes(x = state))+geom_bar()
ggplot(data = df_1,aes(x = state,fill=col))+geom_bar()
ggplot(data = df_1,aes(x = state,fill=col))+geom_bar(position = "dodge")
df_1
ggplot(data = df_1,aes(x = state,y = df_1$val,fill=col))+geom_bar(position = "dodge")
ggplot(data = df_1,aes(x = df_1$val,fill=col))+geom_bar(position = "dodge")
ggplot(data = df_1,aes(x = state,fill=col))+geom_bar(position = "dodge")
ggplot(data = df_1,aes(x = state,fill=col,y=val))+geom_bar(aes(y=val),position = "dodge")
df_1
ggplot(data = df_1,aes(x = df_1$state,y = df_1$val))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = df_1$state,y = x*df_1$val))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = state*val,y = df_1$val))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = state,y = df_1$val))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = state))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = df_1$state))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = df_1$state))+geom_bar(aes(y=val),position = "dodge")
ggplot(data = df_1,aes(x = df_1$state))+geom_bar(aes(y=val,fill=col),position = "dodge")
ggplot(data = df_1,aes(x = state))+geom_bar(aes(y=val,fill=col),position = "dodge")
df
df_1
df_1 <- tidyr::gather(data = df,col,val,2:3)
df_1
df
ggplot(data = df_1,aes(x = state))+geom_bar(aes(y=val,fill=col),position = "dodge")
ggplot(data = df_1,aes(x = state))+geom_bar(aes(fill=col),position = "dodge")
state <- c()
df_1
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col),position = "dodge",stat = T)
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col),position = "dodge",stat = y)
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col,y=val),position = "dodge",stat = y)
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col,y=val),position = "dodge",stat = x~y)
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col,y=val),position = "dodge",stat = "y")
ggplot(data = df_1,aes(x = state,y = val))+geom_bar(aes(fill=col,y=val),position = "dodge",stat = "yes")
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1:6){
v <- c(v,rep(df[i,1],round(df[i,3])))
x <- c(x,rep(colnames(df)[3],round(df[i,3])))
w <- c(v,rep(df[i,1],round(df[i,3])))
y <- c(x,rep(colnames(df)[3],round(df[i,3])))
}
V
v
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1:6){
v <- cbind(v,rep(df[i,1],round(df[i,3])))
x <- cbind(x,rep(colnames(df)[3],round(df[i,3])))
w <- cbind(v,rep(df[i,1],round(df[i,3])))
y <- cbind(x,rep(colnames(df)[3],round(df[i,3])))
}
v
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1:6){
v <- rbind(v,rep(df[i,1],round(df[i,3])))
x <- rbind(x,rep(colnames(df)[3],round(df[i,3])))
w <- rbind(v,rep(df[i,1],round(df[i,3])))
y <- rbind(x,rep(colnames(df)[3],round(df[i,3])))
}
v
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,3]))
y <- rep(colnames(df)[3],round(df[i,3]))
}
v
w
x
y
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[i,2]))
}
v
w
x
y
df <- data.frame(v,x)
df
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[i,2]))
}
df <- data.frame(v,x)
df1 <- rbind(df1,df)
df_1<-NULL
df1 <- rbind(df1,df)
df1<-NULL
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[i,2]))
}
df <- data.frame(v,x)
df1 <- rbind(df1,df)
df1
df1<-NULL
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[i,2]))
}
df[1,2]
df <- head(df)[,c(1,3,4)]
df1<-NULL
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[1,2]))
}
df <- head(df)[,c(1,3,4)]
state1 <- c()
state2<- c()
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[1,2]))
}
v <- c();w <- c() ; x <- c() ; y<- c()
for(i in 1){
v <- rep(df[i,1],round(df[i,3]))
x <- rep(colnames(df)[3],round(df[i,3]))
w <- rep(df[i,1],round(df[i,2]))
y <- rep(colnames(df)[2],round(df[i,2]))
}
df_1
df <- head(df)[,c(1,3,4)]
library(tidyr)
df_1 <- tidyr::gather(data = df,col,val,2:3)
df
df <- data.frame(state=rownames(LifeCycleSavings),LifeCycleSavings,row.names = 1:50)
df <- head(df)[,c(1,3,4)]
df
df_1 <- tidyr::gather(data = df,col,val,2:3)
state1 <- c()
state2<- c()
df
df_1 <- tidyr::gather(data = df,col,val,2:3)
df
rep(df$state,df$pop15)
rep(df$state,df$pop75)
df
data.frame(rep(df$state,df$pop15),rep(colnames(df)[1],df$pop15))
rep(df$state,df$pop15)
colnames(df)[1]
colnames(df)[2]
df$pop15
data.frame(rep(df$state,df$pop15))
data.frame(rep(df$state,df$pop15),"pop15")
data.frame(rep(df$state,df$pop75),"pop75")
a <- data.frame(rep(df$state,df$pop15),"pop15")
b <- data.frame(rep(df$state,df$pop75),"pop75")
rbind(a,b)
a <- data.frame(rep(df$state,df$pop15),"pop15")
b <- data.frame(rep(df$state,df$pop75),"pop75")
b
a
rbind(a,b)
b
a
a <- data.frame(state=rep(df$state,df$pop15),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75),col="pop75")
rbind(a,b)
df_ab <-rbind(a,b)
df_ab
df_ab
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(aes(fill=col,y=val),position = "dodge")
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
df_ab
a <- data.frame(state=rep(df$state,df$pop15*10),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75*10),col="pop75")
df_ab <-rbind(a,b)
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
plot(df_ab)
barplot(df_ab)
barplot(df_ab$state)
barplot(df_ab$state,height = 'count')
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")+ylab(c(0:100))
df$pop75
a <- data.frame(state=rep(df$state,df$pop15*100),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75*100),col="pop75")
df_ab <-rbind(a,b)
library(ggplot2)
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
a <- data.frame(state=rep(df$state,df$pop15),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75),col="pop75")
df_ab <-rbind(a,b)
library(ggplot2)
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
df$pop75
a <- data.frame(state=rep(df$state,df$pop15+1),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75+1),col="pop75")
df_ab <-rbind(a,b)
library(ggplot2)
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
df_ab
a <- data.frame(state=rep(df$state,df$pop15+0.25),col="pop15")
b <- data.frame(state=rep(df$state,df$pop75+0.25),col="pop75")
df_ab <-rbind(a,b)
library(ggplot2)
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge",stat = "identity")
ggplot(data = df_ab,aes(x = state,fill = col))+geom_bar(position = "dodge")
scatterplot3d::scatterplot3d(x =Murder ,y =Assault ,z =Rape ,
color = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),
pch = 20,type = "h",box = F,main = "Crime Cluster")
scatterplot3d::scatterplot3d(x =Murder ,y =Assault ,z =Rape ,
color = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),
pch = 20,type = "h",box = F,main = "Crime Cluster",axis = F)
scatterplot3d::scatterplot3d(x =Murder ,y =Assault ,z =Rape ,
color = ifelse(km_c$cluster == 1,"green",ifelse(km_c$cluster == 2,"red","orange")),
pch = 20,type = "h",box = F,main = "Crime Cluster",xlab = NA)
